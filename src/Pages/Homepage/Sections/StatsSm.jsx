import { useEffect, useRef, useState } from 'react';
import TitleContainer from '../../../components/TitleContainer';
import { useGSAP } from '@gsap/react';
import gsap from 'gsap';
import { useInView } from 'react-intersection-observer';
import statBg from '../../../assets/images/about-bg.jpg';
import CountUp from 'react-countup';
import PrimaryButton from '../../../components/buttons/PrimaryButton';
const contentsCardInfo = [
  {
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="15"
        height="14"
        viewBox="0 0 15 14"
        fill="none"
      >
        <path
          d="M7.70279 13.2708C7.29446 13.2708 6.88029 13.1133 6.57112 12.8042L5.57363 11.8183C5.32863 11.5733 4.99029 11.4391 4.64613 11.4391H4.20279C2.99529 11.4391 2.01529 10.465 2.01529 9.26915V2.90497C2.01529 1.70913 2.99529 0.734985 4.20279 0.734985H11.2028C12.4103 0.734985 13.3903 1.70913 13.3903 2.90497V9.26915C13.3903 10.465 12.4103 11.4391 11.2028 11.4391H10.7594C10.4153 11.4391 10.077 11.5792 9.83195 11.8183L8.83446 12.8042C8.52529 13.1133 8.11112 13.2708 7.70279 13.2708ZM4.20279 1.60415C3.47946 1.60415 2.89029 2.18746 2.89029 2.89913V9.26332C2.89029 9.98082 3.47946 10.5583 4.20279 10.5583H4.64613C5.22363 10.5583 5.78362 10.7916 6.19196 11.1941L7.18945 12.18C7.47529 12.46 7.93613 12.46 8.22196 12.18L9.21946 11.1941C9.62779 10.7916 10.1878 10.5583 10.7653 10.5583H11.2028C11.9261 10.5583 12.5153 9.97498 12.5153 9.26332V2.89913C12.5153 2.18163 11.9261 1.60415 11.2028 1.60415H4.20279Z"
          fill="#4096FA"
        />
        <path
          d="M7.70241 9.18748C7.59741 9.18748 7.49242 9.16997 7.39909 9.1408C6.62909 8.8783 4.64575 7.71749 4.64575 5.54749C4.64575 4.49749 5.49742 3.64581 6.54159 3.64581C6.96742 3.64581 7.37575 3.79165 7.70825 4.04831C8.04075 3.79165 8.44909 3.64581 8.87492 3.64581C9.91909 3.64581 10.7708 4.49749 10.7708 5.54749C10.7708 7.71749 8.78158 8.8783 8.01742 9.1408C7.91242 9.16997 7.80741 9.18748 7.70241 9.18748ZM6.53575 4.52081C5.97575 4.52081 5.51491 4.98165 5.51491 5.54749C5.51491 7.19832 7.11907 8.11998 7.67907 8.31248C7.68491 8.31248 7.70825 8.31248 7.72575 8.31248C8.29158 8.11415 9.88407 7.19249 9.88407 5.55332C9.88407 4.98749 9.42907 4.52665 8.86324 4.52665C8.54241 4.52665 8.24491 4.67833 8.04658 4.93499C7.88324 5.15666 7.50992 5.15666 7.34659 4.93499C7.15992 4.67249 6.86241 4.52081 6.53575 4.52081Z"
          fill="#4096FA"
        />
      </svg>
    ),
    count: 70,
    plus: true,
    title: 'Years',
  },
  {
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="15"
        height="14"
        viewBox="0 0 15 14"
        fill="none"
      >
        <path
          d="M7.08075 6.93001C6.76575 6.93001 6.44492 6.87168 6.19408 6.76084L2.75242 5.23251C1.87742 4.84168 1.74908 4.31668 1.74908 4.03084C1.74908 3.74501 1.87742 3.22001 2.75242 2.82918L6.19408 1.30084C6.70158 1.07334 7.46575 1.07334 7.97325 1.30084L11.4208 2.82918C12.2899 3.21418 12.4241 3.74501 12.4241 4.03084C12.4241 4.31668 12.2958 4.84168 11.4208 5.23251L7.97325 6.76084C7.71658 6.87751 7.40158 6.93001 7.08075 6.93001ZM7.08075 2.00668C6.88242 2.00668 6.68992 2.03584 6.54992 2.10001L3.10825 3.62834C2.75242 3.79168 2.62408 3.95501 2.62408 4.03084C2.62408 4.10668 2.75242 4.27584 3.10242 4.43334L6.54408 5.96168C6.82408 6.08418 7.33158 6.08418 7.61158 5.96168L11.0591 4.43334C11.4149 4.27584 11.5433 4.10668 11.5433 4.03084C11.5433 3.95501 11.4149 3.78584 11.0591 3.62834L7.61742 2.10001C7.47742 2.04168 7.27908 2.00668 7.08075 2.00668Z"
          fill="#4096FA"
        />
        <path
          d="M7.20282 9.96919C6.98115 9.96919 6.75949 9.92252 6.54949 9.82919L2.58865 8.06752C1.98782 7.80502 1.51532 7.07585 1.51532 6.41669C1.51532 6.17752 1.71365 5.97919 1.95282 5.97919C2.19199 5.97919 2.39032 6.17752 2.39032 6.41669C2.39032 6.73752 2.65282 7.14002 2.94449 7.27419L6.90532 9.03585C7.09199 9.11752 7.30782 9.11752 7.50032 9.03585L11.4612 7.27419C11.7528 7.14585 12.0153 6.73752 12.0153 6.41669C12.0153 6.17752 12.2137 5.97919 12.4528 5.97919C12.692 5.97919 12.8903 6.17752 12.8903 6.41669C12.8903 7.07585 12.4178 7.80502 11.817 8.07335L7.85615 9.83502C7.64615 9.92252 7.42449 9.96919 7.20282 9.96919Z"
          fill="#4096FA"
        />
        <path
          d="M7.20282 12.8858C6.98115 12.8858 6.75949 12.8392 6.54949 12.7458L2.58865 10.9842C1.93532 10.6925 1.51532 10.045 1.51532 9.32751C1.51532 9.08835 1.71365 8.89001 1.95282 8.89001C2.19199 8.89001 2.39032 9.09418 2.39032 9.33335C2.39032 9.70085 2.60615 10.0392 2.94449 10.1908L6.90532 11.9525C7.09199 12.0342 7.30782 12.0342 7.50032 11.9525L11.4612 10.1908C11.7995 10.0392 12.0153 9.70668 12.0153 9.33335C12.0153 9.09418 12.2137 8.89585 12.4528 8.89585C12.692 8.89585 12.8903 9.09418 12.8903 9.33335C12.8903 10.0508 12.4703 10.6983 11.817 10.99L7.85615 12.7517C7.64615 12.8392 7.42449 12.8858 7.20282 12.8858Z"
          fill="#4096FA"
        />
      </svg>
    ),
    count: 132,

    title: 'Active projects',
  },
  {
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="15"
        height="14"
        viewBox="0 0 15 14"
        fill="none"
      >
        <path
          d="M7.49431 13.2708H2.58264C1.66681 13.2708 0.914307 12.5358 0.914307 11.6258V2.96917C0.914307 2.07667 1.24681 1.38251 1.85347 1.00334C2.46597 0.618341 3.25931 0.630008 4.08181 1.03834L6.67181 2.31001C7.37764 2.66001 7.93181 3.54084 7.93181 4.32251V12.8333C7.93181 13.0725 7.73347 13.2708 7.49431 13.2708ZM2.86264 1.60417C2.65847 1.60417 2.47181 1.65084 2.31431 1.75001C1.97597 1.96001 1.78931 2.39751 1.78931 2.96917V11.6258C1.78931 12.0517 2.14514 12.3958 2.58264 12.3958H7.05681V4.32251C7.05681 3.87334 6.69514 3.29584 6.28097 3.09751L3.69097 1.82584C3.39347 1.68001 3.11347 1.60417 2.86264 1.60417Z"
          fill="#4096FA"
        />
        <path
          d="M11.1755 13.2708H7.49469C7.25552 13.2708 7.05719 13.0725 7.05719 12.8333V6.07833C7.05719 5.94416 7.11552 5.82166 7.22052 5.73999C7.32552 5.65833 7.45386 5.62333 7.58802 5.65249L7.86219 5.71083L11.6772 6.56249C12.838 6.81916 13.4214 7.50166 13.4564 8.66249C13.4622 8.66249 13.4622 8.72083 13.4622 8.78499V10.99C13.4564 12.4833 12.6689 13.2708 11.1755 13.2708ZM7.93219 12.3958H11.1755C12.2022 12.3958 12.5814 12.0167 12.5814 10.99V8.73833C12.5522 7.93916 12.2489 7.58333 11.4847 7.41416L7.93219 6.62083V12.3958Z"
          fill="#4096FA"
        />
        <path
          d="M5.43512 5.68747H3.41095C3.17178 5.68747 2.97345 5.48914 2.97345 5.24997C2.97345 5.0108 3.17178 4.81247 3.41095 4.81247H5.43512C5.67428 4.81247 5.87262 5.0108 5.87262 5.24997C5.87262 5.48914 5.68012 5.68747 5.43512 5.68747Z"
          fill="#4096FA"
        />
        <path
          d="M5.43512 8.02081H3.41095C3.17178 8.02081 2.97345 7.82248 2.97345 7.58331C2.97345 7.34415 3.17178 7.14581 3.41095 7.14581H5.43512C5.67428 7.14581 5.87262 7.34415 5.87262 7.58331C5.87262 7.82248 5.68012 8.02081 5.43512 8.02081Z"
          fill="#4096FA"
        />
      </svg>
    ),
    count: 3,

    title: 'Offices',
  },
  {
    svg: (
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="15"
        height="14"
        viewBox="0 0 15 14"
        fill="none"
      >
        <path
          d="M10.7021 4.61419C10.6846 4.61419 10.6729 4.61419 10.6554 4.61419H10.6262C9.52373 4.57919 8.70123 3.72752 8.70123 2.67752C8.70123 1.60418 9.57623 0.735016 10.6437 0.735016C11.7112 0.735016 12.5862 1.61002 12.5862 2.67752C12.5804 3.73335 11.7579 4.58502 10.7079 4.62002C10.7079 4.61418 10.7079 4.61419 10.7021 4.61419ZM10.6437 1.60419C10.0546 1.60419 9.57623 2.08252 9.57623 2.67169C9.57623 3.24919 10.0254 3.71585 10.6029 3.73919C10.6087 3.73335 10.6554 3.73335 10.7079 3.73919C11.2737 3.71002 11.7112 3.24335 11.7171 2.67169C11.7171 2.08252 11.2387 1.60419 10.6437 1.60419Z"
          fill="#4096FA"
        />
        <path
          d="M10.7083 8.91334C10.4808 8.91334 10.2533 8.89584 10.0258 8.855C9.7866 8.81417 9.6291 8.58667 9.66993 8.3475C9.71077 8.10834 9.93827 7.95084 10.1774 7.99167C10.8949 8.11417 11.6533 7.98001 12.1608 7.64168C12.4349 7.46084 12.5808 7.23334 12.5808 7.00584C12.5808 6.77834 12.4291 6.55667 12.1608 6.37584C11.6533 6.0375 10.8833 5.90334 10.1599 6.03167C9.92077 6.07834 9.69327 5.915 9.65243 5.67584C9.6116 5.43667 9.7691 5.20917 10.0083 5.16834C10.9591 4.99917 11.9449 5.18 12.6449 5.64667C13.1583 5.99084 13.4558 6.48084 13.4558 7.00584C13.4558 7.525 13.1641 8.02084 12.6449 8.37084C12.1141 8.72084 11.4258 8.91334 10.7083 8.91334Z"
          fill="#4096FA"
        />
        <path
          d="M3.68492 4.61416C3.67909 4.61416 3.67326 4.61416 3.67326 4.61416C2.62326 4.57916 1.80076 3.72749 1.79492 2.67749C1.79492 1.60415 2.66992 0.729156 3.73742 0.729156C4.80492 0.729156 5.67992 1.60416 5.67992 2.67166C5.67992 3.72749 4.85742 4.57916 3.80742 4.61416L3.68492 4.17666L3.72576 4.61416C3.71409 4.61416 3.69659 4.61416 3.68492 4.61416ZM3.74326 3.73916C3.77826 3.73916 3.80742 3.73916 3.84242 3.74499C4.36159 3.72166 4.81659 3.25499 4.81659 2.67749C4.81659 2.08832 4.33826 1.60999 3.74909 1.60999C3.15992 1.60999 2.68159 2.08832 2.68159 2.67749C2.68159 3.24915 3.12492 3.70999 3.69076 3.74499C3.69659 3.73916 3.71992 3.73916 3.74326 3.73916Z"
          fill="#4096FA"
        />
        <path
          d="M3.67902 8.91334C2.96152 8.91334 2.27318 8.72084 1.74235 8.37084C1.22902 8.02668 0.931519 7.53084 0.931519 7.00584C0.931519 6.48667 1.22902 5.99084 1.74235 5.64667C2.44235 5.18 3.42819 4.99917 4.37902 5.16834C4.61819 5.20917 4.77569 5.43667 4.73485 5.67584C4.69402 5.915 4.46652 6.07834 4.22735 6.03167C3.50402 5.90334 2.73985 6.0375 2.22652 6.37584C1.95235 6.55667 1.80652 6.77834 1.80652 7.00584C1.80652 7.23334 1.95819 7.46084 2.22652 7.64168C2.73402 7.98001 3.49235 8.11417 4.20985 7.99167C4.44902 7.95084 4.67652 8.11417 4.71735 8.3475C4.75819 8.58667 4.60069 8.81417 4.36152 8.855C4.13402 8.89584 3.90652 8.91334 3.67902 8.91334Z"
          fill="#4096FA"
        />
        <path
          d="M7.20207 8.97167C7.18457 8.97167 7.1729 8.97167 7.1554 8.97167H7.12623C6.02373 8.93667 5.20123 8.085 5.20123 7.035C5.20123 5.96167 6.07623 5.0925 7.14373 5.0925C8.21123 5.0925 9.08623 5.9675 9.08623 7.035C9.0804 8.09083 8.2579 8.9425 7.2079 8.9775C7.2079 8.97167 7.2079 8.97167 7.20207 8.97167ZM7.14373 5.96167C6.55457 5.96167 6.07623 6.44 6.07623 7.02917C6.07623 7.60667 6.5254 8.07334 7.1029 8.09667C7.10873 8.09084 7.1554 8.09084 7.2079 8.09667C7.77373 8.0675 8.21123 7.60084 8.21707 7.02917C8.21707 6.44584 7.73873 5.96167 7.14373 5.96167Z"
          fill="#4096FA"
        />
        <path
          d="M7.20194 13.2766C6.50194 13.2766 5.80194 13.0958 5.25944 12.7283C4.74611 12.3841 4.44861 11.8941 4.44861 11.3691C4.44861 10.85 4.74027 10.3483 5.25944 10.0041C6.35027 9.28081 8.05944 9.28081 9.14444 10.0041C9.65778 10.3483 9.95528 10.8383 9.95528 11.3633C9.95528 11.8825 9.66361 12.3841 9.14444 12.7283C8.60194 13.09 7.90194 13.2766 7.20194 13.2766ZM5.74361 10.7391C5.46944 10.92 5.32361 11.1475 5.32361 11.375C5.32361 11.6025 5.47528 11.8241 5.74361 12.005C6.53111 12.5358 7.86694 12.5358 8.65444 12.005C8.92861 11.8241 9.07444 11.5966 9.07444 11.3691C9.07444 11.1416 8.92278 10.92 8.65444 10.7391C7.87278 10.2083 6.53694 10.2141 5.74361 10.7391Z"
          fill="#4096FA"
        />
      </svg>
    ),
    count: 200,
    plus: true,
    title: 'Active Projects',
  },
];

const StatsSm = () => {
  const borderRef = useRef(null);
  const statsContainerRef = useRef(null);
  const backgroundImageRef = useRef(null);
  const [isInView, setIsInView] = useState(false);

  const { ref, inView } = useInView({
    triggerOnce: true,
    threshold: 0.1,
  });

  // Update state when component comes into view
  useEffect(() => {
    if (inView) {
      setIsInView(true);
    }
  }, [inView]);

  useGSAP(
    () => {
      // Only animate if the component is in view
      if (inView) {
        const tl = gsap.timeline({
          scrollTrigger: {
            trigger: statsContainerRef.current,
            start: 'top 80%',
            end: 'bottom top',
            toggleActions: 'play none none reverse',
          },
        });

        // Title animation
        tl.from('.stats-sm-title', {
          y: 50,
          opacity: 0,
          filter: 'blur(15px)',
          duration: 0.7,
          ease: 'power3.out',
        })
          // Border animation
          .fromTo(
            borderRef.current,
            {
              width: '0px',
            },
            {
              width: '100px',
              duration: 0.5,
              ease: 'power3.out',
            }
          )
          // Description animation
          .from('.stats-sm-description', {
            y: 20,
            opacity: 0,
            filter: 'blur(15px)',
            duration: 0.7,
            ease: 'power3.out',
          })
          // Background image animation
          .from(backgroundImageRef.current, {
            scale: 0.8,
            opacity: 0,
            duration: 0.8,
            ease: 'power3.out',
          })
          // Stats cards animation
          .from('.stats-card', {
            y: 50,
            opacity: 0,
            stagger: 0.1,
            duration: 0.6,
            ease: 'back.out(1.7)',
          })
          .from('.stats-container-sm-btn', {
            y: 50, // Changed from x to y for vertical animation
            opacity: 0,
            duration: 0.8,
            ease: 'back.out(1.7)', // Added a bounce-like ease
          });
      }
    },
    { dependencies: [inView], scope: statsContainerRef }
  );

  return (
    <div
      ref={statsContainerRef}
      className="bg-[#163B77] stats-sm-container md:hidden px-5 py-6 md:px-8 2xl:px-24 pb-14 w-full projects-container-sm"
    >
      <div className="stats-sm-title">
        <TitleContainer
          borderRef={borderRef}
          highlightedText="We Are"
          title="RELIANCE"
          borderColor="light"
        />
      </div>

      <div className="mt-5">
        <p className="stats-sm-description text-white">
          Reliance Construction Group is a family-owned enterprise with a rich
          history spanning over 75 years. Three decades ago, we stepped away
          from real estate to focus exclusively on contract construction. Today,
          we stand as one of North America&apos;s leading, privately-owned
          construction companies.
        </p>
      </div>

      {/* Stats section */}
      <div className="mt-6">
        <div
          ref={backgroundImageRef}
          className="h-full max-h-[250px] w-full border-2 border-textColor stats-sm-stat-bg"
        >
          <img
            src={statBg}
            className="w-full h-full object-cover"
            alt="Background"
          />
        </div>

        <div ref={ref} className="mt-5 grid grid-cols-4 gap-2">
          {contentsCardInfo?.map((info) => (
            <div
              key={info?.title}
              className="bg-white rounded-md p-1 py-2 stats-card"
            >
              <div className="flex items-center gap-2">
                <div className="p-1 rounded-full bg-[#4096FA1A]">
                  {info?.svg}
                </div>
                <div>
                  <span className="font-bold text-[#16358F]">
                    {isInView && (
                      <CountUp
                        start={0}
                        duration={5}
                        end={info?.count}
                        delay={0.5}
                      />
                    )}
                    {info?.plus && '+'}
                  </span>
                </div>
              </div>
              <div className="mt-2">
                <p className="text-[10px] text-[#16358F] text-center">
                  {info?.title}
                </p>
              </div>
            </div>
          ))}
        </div>
      </div>

      <div className="stats-container-sm-btn mt-5">
        <PrimaryButton title={'View our projects'} variant={'primary'} />
      </div>
    </div>
  );
};

export default StatsSm;
